<?xml version='1.0' encoding='UTF-8'?>
<testsuite hostname="johnny-B250M-HD3" name="MongoTest" tests="1" errors="0" failures="1" skipped="0" time="1.294" timestamp="2020-05-24T23:19:25">
                     <properties>
      <property name="jline.esc.timeout" value="0"/><property name="jna.platform.library.path" value="/usr/lib/x86_64-linux-gnu:/lib/x86_64-linux-gnu:/lib64:/usr/lib:/lib:/lib/i386-linux-gnu:/usr/lib32:/usr/lib/i386-linux-gnu:/lib32:/usr/lib/x86_64-linux-gnu/libfakeroot"/><property name="java.runtime.name" value="Java(TM) SE Runtime Environment"/><property name="sun.boot.library.path" value="/usr/lib/jvm/java-8-oracle/jre/lib/amd64"/><property name="java.vm.version" value="25.201-b09"/><property name="java.vm.vendor" value="Oracle Corporation"/><property name="java.vendor.url" value="http://java.oracle.com/"/><property name="path.separator" value=":"/><property name="jna.loaded" value="true"/><property name="java.vm.name" value="Java HotSpot(TM) 64-Bit Server VM"/><property name="file.encoding.pkg" value="sun.io"/><property name="user.country" value="US"/><property name="sun.java.launcher" value="SUN_STANDARD"/><property name="sun.os.patch.level" value="unknown"/><property name="jna.nosys" value="true"/><property name="java.vm.specification.name" value="Java Virtual Machine Specification"/><property name="user.dir" value="/mnt/storage/Lab/reactiveMongo/standAlone"/><property name="java.runtime.version" value="1.8.0_201-b09"/><property name="java.awt.graphicsenv" value="sun.awt.X11GraphicsEnvironment"/><property name="java.endorsed.dirs" value="/usr/lib/jvm/java-8-oracle/jre/lib/endorsed"/><property name="os.arch" value="amd64"/><property name="java.io.tmpdir" value="/tmp"/><property name="line.separator" value="
"/><property name="java.vm.specification.vendor" value="Oracle Corporation"/><property name="log4j.ignoreTCL" value="true"/><property name="os.name" value="Linux"/><property name="sun.jnu.encoding" value="UTF-8"/><property name="jnidispatch.path" value="/home/johnny/.cache/JNA/temp/jna5723614903626034716.tmp"/><property name="java.library.path" value="/usr/java/packages/lib/amd64:/usr/lib64:/lib64:/lib:/usr/lib"/><property name="sun.nio.ch.bugLevel" value=""/><property name="java.specification.name" value="Java Platform API Specification"/><property name="java.class.version" value="52.0"/><property name="sun.management.compiler" value="HotSpot 64-Bit Tiered Compilers"/><property name="os.version" value="4.15.0-101-generic"/><property name="swoval.tmpdir" value="/home/johnny/.sbt/1.0"/><property name="user.home" value="/home/johnny"/><property name="user.timezone" value="Asia/Dhaka"/><property name="java.awt.printerjob" value="sun.print.PSPrinterJob"/><property name="file.encoding" value="UTF-8"/><property name="java.specification.version" value="1.8"/><property name="java.class.path" value="/usr/share/sbt/bin/sbt-launch.jar"/><property name="user.name" value="johnny"/><property name="jline.shutdownhook" value="false"/><property name="java.vm.specification.version" value="1.8"/><property name="sun.java.command" value="/usr/share/sbt/bin/sbt-launch.jar"/><property name="java.home" value="/usr/lib/jvm/java-8-oracle/jre"/><property name="sun.arch.data.model" value="64"/><property name="user.language" value="en"/><property name="java.specification.vendor" value="Oracle Corporation"/><property name="awt.toolkit" value="sun.awt.X11.XToolkit"/><property name="java.vm.info" value="mixed mode"/><property name="java.version" value="1.8.0_201"/><property name="java.ext.dirs" value="/usr/lib/jvm/java-8-oracle/jre/lib/ext:/usr/java/packages/lib/ext"/><property name="sun.boot.class.path" value="/usr/lib/jvm/java-8-oracle/jre/lib/resources.jar:/usr/lib/jvm/java-8-oracle/jre/lib/rt.jar:/usr/lib/jvm/java-8-oracle/jre/lib/sunrsasign.jar:/usr/lib/jvm/java-8-oracle/jre/lib/jsse.jar:/usr/lib/jvm/java-8-oracle/jre/lib/jce.jar:/usr/lib/jvm/java-8-oracle/jre/lib/charsets.jar:/usr/lib/jvm/java-8-oracle/jre/lib/jfr.jar:/usr/lib/jvm/java-8-oracle/jre/classes"/><property name="java.vendor" value="Oracle Corporation"/><property name="file.separator" value="/"/><property name="java.vendor.url.bug" value="http://bugreport.sun.com/bugreport/"/><property name="sun.io.unicode.encoding" value="UnicodeLittle"/><property name="sun.cpu.endian" value="little"/><property name="sun.desktop" value="gnome"/><property name="sun.cpu.isalist" value=""/>
    </properties>
                     <testcase classname="MongoTest" name="should create transaction" time="1.294">
                                                 <failure message="CommandError[code=251, errmsg=Given transaction number 1 does not match any in-progress transactions. The active transaction number is -1, doc: {
  &quot;errorLabels&quot;: [
    &quot;TransientTransactionError&quot;
  ],
  &quot;operationTime&quot;: Timestamp(1590340759, 2),
  &quot;ok&quot;: 0.0,
  &quot;errmsg&quot;: &quot;Given transaction number 1 does not match any in-progress transactions. The active transaction number is -1&quot;,
  &quot;code&quot;: 251,
  &quot;codeName&quot;: &quot;NoSuchTransaction&quot;,
  &quot;$clusterTime&quot;: {
    &quot;clusterTime&quot;: Timestamp(1590340759, 2),
    &quot;signature&quot;: {
      &quot;hash&quot;: BSONBinary(GenericBinarySubtype, size = 20),
      &quot;keyId&quot;: NumberLong(6778831253614362625)
    }
  }
}]" type="reactivemongo.api.commands.CommandError$DefaultCommandError">reactivemongo.api.commands.CommandError$DefaultCommandError: CommandError[code=251, errmsg=Given transaction number 1 does not match any in-progress transactions. The active transaction number is -1, doc: {
  &quot;errorLabels&quot;: [
    &quot;TransientTransactionError&quot;
  ],
  &quot;operationTime&quot;: Timestamp(1590340759, 2),
  &quot;ok&quot;: 0.0,
  &quot;errmsg&quot;: &quot;Given transaction number 1 does not match any in-progress transactions. The active transaction number is -1&quot;,
  &quot;code&quot;: 251,
  &quot;codeName&quot;: &quot;NoSuchTransaction&quot;,
  &quot;$clusterTime&quot;: {
    &quot;clusterTime&quot;: Timestamp(1590340759, 2),
    &quot;signature&quot;: {
      &quot;hash&quot;: BSONBinary(GenericBinarySubtype, size = 20),
      &quot;keyId&quot;: NumberLong(6778831253614362625)
    }
  }
}]
</failure>
                                               </testcase>
                     <system-out><![CDATA[]]></system-out>
                     <system-err><![CDATA[]]></system-err>
                   </testsuite>